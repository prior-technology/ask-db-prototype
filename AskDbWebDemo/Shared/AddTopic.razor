@using AskDbWebDemo.Data
@using AskDb.Model
@inject AnswerServiceCaller _answerServiceCaller

@* A form to add a topic providing a key, description and document text *@

<fieldset>
    <legend>Add Topic</legend>
    <p>Provide a unique identifier and description for this topic</p>
    <div class="grid" style="--col: 2">
        <p>
            <label>Identifier
            <input value="@_topic.Key" @onchange="@HandleKeyChange" size="@MaxInput" />
            </label>
        </p>
        <p>
            <label>Topic Description
            <input value="@_topic.Description" @onchange="@HandleDescriptionChange" size="@MaxInput" />
            </label>
        </p>
    </div>
    <p>Paste in text of the document this topic is based on </p>
    <label>Full Text
        <TextArea @onchange="@HandleDocument" maxlength="100000">@_fullText</TextArea>
    </label>
    
    <button @onclick="AddTopicClicked">Save</button>
</fieldset>    


@code
{

    //userSid property passed in from container
    [Parameter]
    public string UserSid { get; set; } = null;

    private const int MaxInput = 100;
    private Topic _topic = new();
    private string _fullText = "";

    private void HandleKeyChange(ChangeEventArgs e)
    {
        _topic.Key = e.Value.ToString();
    }  
    private void HandleDescriptionChange(ChangeEventArgs e)
    {
        _topic.Description = e.Value.ToString();
    }

    private void HandleDocument(ChangeEventArgs e)
    {
        _topic.FullText = e.Value.ToString();
    }

    private async Task AddTopicClicked()
    {
        await _answerServiceCaller.CreateTopic(UserSid, _topic);        
    }

    private void HandleUploadedDocument(ChangeEventArgs e)
    {

    }
}